version: "3"

volumes:
  mysqlstorage:

services:
  php7.1.18:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env
    volumes:
      - ./:/app
    ports:
      - ${PORT}:8080
    command: "php ./yii serve 0.0.0.0:8080 --docroot=frontend/web/"
    environment:
      DB_NAME: ${DB_NAME}
      DB_HOST: dbserver
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USER}
    links:
      - mysql:dbserver
      - mongo:mongoserver
    depends_on:
      - mysql
      - mongo

  mysql:
    image: 'mysql:5.7'
    env_file:
      - ./.env
    environment:
      DB_NAME: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USER}
    build:
      context: .
      dockerfile: mysql.dockerfile
      args:
        MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    restart: always
    volumes:
      - ./:/app
      - mysqlstorage:/data/db
    ports:
      - "3306:3306"

  mongo:
    image: mongo
    restart: always
    volumes:
      - ./mongo-data:/data/db
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
